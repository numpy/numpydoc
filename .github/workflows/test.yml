name: numpydoc tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        os: [Ubuntu]
        python-version: [3.6, 3.7, 3.8, 3.9]
        sphinx-version: ["sphinx==1.8.0", "sphinx==2.1", "sphinx>3.0"]
    steps:
    - uses: actions/checkout@v2
    
    - name: Python setup
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Setup environment
      run: |
        python -m venv venv
        source venv/bin/activate

    - name: Install
      run: |
        python -m pip install --upgrade pip wheel setuptools
        python -m pip install -r test_requirements.txt -r doc/requirements.txt
        python -m pip install codecov
        python -m pip install ${{ matrix.sphinx-version }}
        python -m pip install .
        pip list

    - name: Run test suite
      run: |
        pytest -v --pyargs .

    - name: Test coverage
      run: |
        codecov

    - name: Make sure CLI works
      run: |
        python -m numpydoc numpydoc.tests.test_main._capture_stdout
        echo '! python -m numpydoc numpydoc.tests.test_main._invalid_docstring' | bash
        python -m numpydoc --validate numpydoc.tests.test_main._capture_stdout
        echo '! python -m numpydoc --validate numpydoc.tests.test_main._docstring_with_errors' | bash

    - name: Setup for doc build
      run: |
        sudo apt install texlive texlive-latex-extra latexmk dvipng

    - name: Build documentation
      run: |
        make -C doc html SPHINXOPTS="-nT"
        make -C doc latexpdf SPHINXOPTS="-nT"
